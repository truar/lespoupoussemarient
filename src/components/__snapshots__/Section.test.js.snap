// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Section />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <VisibilitySensor
        active={true}
        containment={null}
        delayedCall={false}
        intervalCheck={true}
        intervalDelay={100}
        minTopValue={0}
        offset={Object {}}
        partialVisibility={true}
        resizeCheck={false}
        resizeDelay={250}
        resizeThrottle={-1}
        scrollCheck={false}
        scrollDelay={250}
        scrollThrottle={-1}
      >
        <section
          className="undefined Section"
        />
      </VisibilitySensor>,
      "id": "view-undefined",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": true,
        "children": <section
          className="undefined Section"
        />,
        "containment": null,
        "delayedCall": false,
        "intervalCheck": true,
        "intervalDelay": 100,
        "minTopValue": 0,
        "offset": Object {},
        "onChange": undefined,
        "partialVisibility": true,
        "resizeCheck": false,
        "resizeDelay": 250,
        "resizeThrottle": -1,
        "scrollCheck": false,
        "scrollDelay": 250,
        "scrollThrottle": -1,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "undefined Section",
          "id": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "section",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <VisibilitySensor
          active={true}
          containment={null}
          delayedCall={false}
          intervalCheck={true}
          intervalDelay={100}
          minTopValue={0}
          offset={Object {}}
          partialVisibility={true}
          resizeCheck={false}
          resizeDelay={250}
          resizeThrottle={-1}
          scrollCheck={false}
          scrollDelay={250}
          scrollThrottle={-1}
        >
          <section
            className="undefined Section"
          />
        </VisibilitySensor>,
        "id": "view-undefined",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": true,
          "children": <section
            className="undefined Section"
          />,
          "containment": null,
          "delayedCall": false,
          "intervalCheck": true,
          "intervalDelay": 100,
          "minTopValue": 0,
          "offset": Object {},
          "onChange": undefined,
          "partialVisibility": true,
          "resizeCheck": false,
          "resizeDelay": 250,
          "resizeThrottle": -1,
          "scrollCheck": false,
          "scrollDelay": 250,
          "scrollThrottle": -1,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "undefined Section",
            "id": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "section",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
